ஜாவா ஸ்கிரிப்ட்:

ஏன் படிக்க வேண்டும்?
JavaScript is a programming language that adds interactivity to your website. 
This happens in games, in the behavior of responses when buttons are pressed or 
with data entry on forms; with dynamic styling; with animation, etc.

யார் கண்டுபிடித்தார்?
Brendan Eich.

ஜாவாஸ்கிரிப்ட் என்றால் என்ன?
JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language 
with first-class functions.[Lambda Expressions]

JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, 
supporting object-oriented, imperative, and declarative (e.g. functional programming) styles.

ஜாவாஸ்கிரிப்ட், ஜாவா ஒன்றா?
இல்லை.
ஜாவாவின் static type, strong type checking இங்கில்லை. 
ஜாவாவைப் போன்ற syntax, naming convention, basic control flow statements இங்கும் உண்டு.  
அதனால் தான் livescript என்னும் பெயரில் இருந்து ஜாவாஸ்கிரிப்ட் என்று பெயர் வைத்தார்கள்.

ஜாவாஸ்கிரிப்டில் numeric, Boolean and string  உண்டு.

JavaScript is a very free-form language compared to Java.
You do not have to declare all variables, classes, and methods. 
You do not have to be concerned with whether methods are public, private, or protected, 
and you do not have to implement interfaces. 
Variables, parameters, and function return types are not explicitly typed.

Java is a class-based programming language designed for fast execution and type safety.

JavaScript is standardized at Ecma International.

ECMA was formerly an acronym for the European Computer Manufacturers Association

ஜாவாஸ்கிரிப்டை எங்கே தொடங்குவது?
1) வெப் கன்சோல் (Web Console)
Ctrl+Shift+I
Tools --> Developer --> Web Console

2+2

console.log("Hi")
console.log(5+10)

2) Multiline Input:
Ctrl+Shift+Iக்குப் பிறகு Ctrl+B

(function(){
  "use strict";
  /* Start of your code */
  function greetMe(yourName) {
    alert(`Hello ${yourName}`);
  }

  greetMe('World');
  /* End of your code */
})();

மேல் உள்ளதை run பண்ண: Ctrl+Enter

அடிப்படைகள்:
ஜாவாஸ்கிரிப்டின் syntax ஜாவா, சி, சி++ இல் இருந்து வந்தது.  Awk, Perl, Python influenceஉம் உண்டு. 

Types of Variables: 

JavaScript has three kinds of variable declarations.

1. var: function scoped அல்லது globally scoped variable. 

var statement declares a function-scoped or globally-scoped variable, 
optionally initializing it to a value.

var x = 1;

if (x === 1) {
  var x = 2;

  console.log('inside if ', x);
  // expected output: 2
}

console.log('outside if', x);
// expected output: 2

var இப்போது அவ்வளவாகப் பயன்படுத்தப்படுவதில்லை.

let:
The let declaration declares a block-scoped local variable, optionally initializing it to 
a value.

let a = 1;
if (a === 1) 
{
  let a = 2;
  console.log(a);
  // expected output: 2
}

console.log(a);
// expected output: 1

const:
The const declaration creates block-scoped constants.

const number = 42;
try {
  number = 99;
} catch (err) {
  console.log(err);
  // expected output: TypeError: invalid assignment to const `number'
  // Note - error messages will vary depending on browser
}

console.log(number);
// expected output: 42

----
Variables: [Identifiers]
A JavaScript identifier usually starts with a letter, underscore (_), or dollar sign ($).

In var and let declarations, the initializer is optional. If a variable is declared without 
an initializer, it is assigned the value undefined.

let num;
console.log(num); // logs "undefined"

Datatypes:

8 Basic Datatypes:

JavaScript is a dynamically typed language. This means you don't have to specify the data type of a variable when you declare it. It also means that data types are automatically converted as-needed during script execution.

let answer = 42;
answer = 'Thanks you for your wishes!';

x = 'The answer is ' + 42 // "The answer is 42"
y = 42 + ' is the answer' // "42 is the answer"
z = '37' + 7 // "377"


'37' - 7 // 30
'37' * 7 // 259

Datatypes: 
8 Datatypes in JavaScript. 

let message = "vanakkam";
message = 78;

இதை ஜாவாஸ்கிரிப்ட் ஏற்றுக் கொள்ளும்.  ஏனென்றால், ஜாவாஸ்கிரிப்ட் ஒரு Dynamically Typed Programming Language.  

1. Number: 
Integer, Float இரண்டிற்குமே Number தான். 

alert( 1 / 0 ); // infinity என்று கொடுக்கும். 
alert(1/"Hi"); // NaN என்று கொடுக்கும்.  Not a Number

2. BigInt: 
2^53 - 1 (9007199254740991) ஐவிடப் பெரியது, -2^53 - 1 ஐவிடச் சின்ன எண் வேண்டும் என்றால், BigInt பயன்படுத்த வேண்டும். 

3. String: 
Double Quotes, Single Quotes, Back Ticks மூன்றும் பயன்படுத்தலாம். 
let str = "Vanakkam";
let str2 = 'Single quotes are ok too';
let phrase = `We can embed another ${str}`;

str = 'Vanakkam'
alert(`${str}  Chennai`)

alert( `the result is ${10 + 20}` );


4. Boolean: 
true or false

let isGreater = 5 > 10;

alert( isGreater );

5. "null" value:
ஜாவாஸ்கிரிப்டில் null என்றால் nothing, empty, unknown value. 
let age = null; 

6. "undefined" value:
let age;

alert(age); // "undefined" என்று வரும்.  

7. Object 
key value pair ஆக உருவாக்கப்படும்.  non-primitive datatype. key-value சேர்ந்து property எனச் சொல்லப்படும்.  key என்பது string ஆகவும் value எதுவாகவும் இருக்கலாம். 

உருவாக்கும் முறைகள்: 
let user = new Object(); // "object constructor" syntax
let user = {};

let user = {     // an object
  name: "அமுதன்",  
  age: 10        
};

alert(user.name);
alert(user.age);

இன்னொரு property சேர்க்க வேண்டுமானால்: 
user.isStudent = true;

alert(user.isStudent); 

user["isTrainee"] = false; 
alert(user.isTrainee);

propertyஐ நீக்க வேண்டுமானால்: 
delete user.age;

8. Symbols
இவை இரண்டும் non-primitive datatypes. இவை இரண்டும் collections of dataக்குப் பயன்படும்.  

typeof operator: 
ஜாவாவில் instanceof operator செய்யும் வேலையை இது செய்யும்.  

let a = 5
alert(typeof(a))


Interactions:
-------------
alert, prompt, confirm

1. alert:
ஏற்கெனவே பார்த்து விட்டோம்.
alert("Vanakkam");
இந்த alert popupஐ modal window என்று சொல்வார்கள்.  [அந்த நேரத்தில் browserஇல் எந்த வேலையும் செய்ய முடியாது]

2. prompt:
modal window - ஒரு input box உடன்.
இரண்டு argumentsஐ ஏற்கும்.  இரண்டாவது argument கட்டாயமில்லை.

let age = prompt('உங்கள் வயது என்ன?', 100);

alert(`உங்களுக்கு  ${age} வயது!`); // You are 100 years old!

Firefoxஇல் இரண்டாவது முயல: {	} சேர்க்கவும். 
https://discourse.mozilla.org/t/syntaxerror-redeclaration-of-formal-parameter/83083/4

3. confirm:
கேள்வியுடன் கூடிய modal window.
let ok = confirm("நலம் தானா?");

alert( ok ); 

பயிற்சி: 
உங்கள் பெயரை உள்ளீடாக வாங்க, ஒரு web page உருவாக்குங்கள். 

<!DOCTYPE html>
<html>
<body>

  <script>
    'use strict';

    let name = prompt("What is your name?", "");
    alert(name);
  </script>

</body>
</html>



Type Conversion: 
----------------
let value = true;
alert(typeof value); // boolean

value = String(value); // now value is a string "true"
alert(typeof value); 

let str = "123";
alert(typeof str); // string

let num = Number(str); // becomes a number 123

alert(typeof num);

alert( Boolean(1) ); // true
alert( Boolean(0) ); // false

alert( Boolean("hello") ); // true
alert( Boolean("") ); // false

Looping: while, do...while and for:
-----------------------------------

while:
let i = 1;
while (i <= 3) {
  alert( i );
  i++;
}

let i = 1;
do {
  alert( i );
  i++;
} while (i <= 3);

for (let i = 0; i < 3; i++)
{
  alert(i);
}

break:
let sum = 0;
while (true) {
  let value = +prompt("Enter a number", '');
  if (!value) break; // (*)
  sum += value;
}
alert( 'Sum: ' + sum );

Labels:
ஜாவாவில் இருப்பதைப் போலவே, இங்கேயும் labels உண்டு.

outer: for (let row = 0; row < 3; row++) {

  for (let col = 0; col < 3; col++) {

    let input = prompt(`Value at looping (${row},${col})`, '');

    // if an empty string or canceled, then break out of both loops
    if (!input) break outer; // (*)

    // do something with the value...
  }
}

alert('Done!');


Functions: 
------------


function showMessage() {
  alert( 'Hello everyone!' );
}


function showMessage() {
  alert( 'Hello everyone!' );
}

showMessage();
showMessage();

Local Variable: 
function showMessage() {
  let message = "Hello, I'm JavaScript!"; // local variable

  alert( message );
}

showMessage(); // Hello, I'm JavaScript!

alert( message ); 

Outer variables: 
let userName = 'Nandhan';

function showMessage() {
  let message = 'Hello, ' + userName;
  alert(message);
}

showMessage(); // Hello, Nandhan 

--
let userName = 'Viyan';

function showMessage() {
  userName = "Nandhan"; // (1) changed the outer variable

  let message = 'Hello, ' + userName;
  alert(message);
}

alert( userName ); // Viyan before the function call

showMessage();

alert( userName ); 

Parameters:
----------
function showMessage(from, text) {

  from = '*' + from + '*'; 

  alert( from + ': ' + text );
}

let from = "Amuthan says to you: ";

showMessage(from, "Hello");
----
function showPrimes(n) {
  nextPrime: for (let i = 2; i < n; i++) {

    for (let j = 2; j < i; j++) {
      if (i % j == 0) continue nextPrime;
    }

    alert( i ); // a prime
  }
}

showPrimes(20);
----
Function expressions:
In JavaScript, Functions are special kind of values. 
function sayHi() {
  alert( "Hello" );
}
மேலே இருப்பது function.  இதையே function expressionஆக எழுதலாம். 

let sayHi = function() {
  alert( "Hello" );
};

alert(sayHi);

Function is a value: 
-------------------
function sayHi() {
  alert( "Hello" );
}

alert( sayHi ); // shows the function code

மேல் உள்ளதில் alert(sayHi()) கொடுத்துப் பாருங்கள்.  

https://javascript.info/function-expressions

Arrow Functions: 

let sum = (a, b) => a + b;

/* This arrow function is a shorter form of:

let sum = function(a, b) {
  return a + b;
};
*/

alert( sum(1, 2) ); // 3

Arguments இல்லையென்றால்:
let sayHi = () => alert("Hello!");

sayHi();

Multiline Arrow Functions: 
let sum = (a, b) => {  // the curly brace opens a multiline function
  let result = a + b;
  return result; // if we use curly braces, then we need an explicit "return"
};

alert( sum(1, 2) ); // 3

----
<html>
<head>
<title> Hi </title>
</head>
<body>
<script>
let sum = (a, b) => {  // the curly brace opens a multiline function
  let result = a + b;
  return result; // if we use curly braces, then we need an explicit "return"
};
alert( sum(1, 2) ); 
</script>
</body>

</html>



How to Execute using Notepad:
1. Save .js file anywhere. [eg. index.js]
2. Open Terminal and move to file location
3. Type as below:
    node index.js


https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types


Document Object Model:

The Document Object Model (DOM) is a programming interface for web documents. 
It represents the page so that programs can change the document structure, style, and content.

The document object is the main “entry point” to the page.

Document Object Model (DOM)ஐப் பொறுத்தவரை ஒவ்வொரு HTML tagஉம் ஒரு Object. Nested tags --> “children” of the enclosing one. 
tagக்குள் இருக்கும் textஉம் ஒரு object தான். 

DOM Example: https://javascript.info/dom-nodes 

HTMLஐ DOMஆக மாற்றிப் பார்க்க: https://software.hixie.ch/utilities/js/live-dom-viewer/


Accessing DOM:
இதை முயன்று பாருங்கள். 
// change the background color to red
document.body.style.background = "red";

// change it back after 1 second
setTimeout(() => document.body.style.background = "", 1000);

setTimeout(() => document.body.style.background = "green", 1000); கொடுத்துப் பாருங்கள். 



HTML கோப்பில்:

<body onload="console.log('Welcome to my home page!');">
  …
</body>

பொதுவாக ஜாவாஸ்கிரிப்டை HTMLஇல் சேர்ப்பது நல்லதில்லை.  எனவே,

<html lang="en">
  <head>
    <script>
      // run this function when the document is loaded
      window.onload = () => {
        // create a couple of elements in an otherwise empty HTML page
        const heading = document.createElement("h1"); // <h1> </h1>
        const headingText = document.createTextNode("Father Of Internet: Tim Berners Lee"); 
        heading.appendChild(headingText); //<h1> Father Of Internet: Tim Berners Lee</h1>
        document.body.appendChild(heading);
      };
    </script>
  </head>
  <body></body>
</html>

-----------------

<div>First div</div>

<script>
  let divs = document.getElementsByTagName('div');
  alert(divs.length); // 1
</script>

<div>Second div</div>

<script>
  alert(divs.length); // 2
</script>
---------------
<table id="table">
  <tr>
    <td>Your age:</td>

    <td>
      <label>
        <input type="radio" name="age" value="young" checked> less than 18
      </label>
      <label>
        <input type="radio" name="age" value="mature"> from 18 to 50
      </label>
      <label>
        <input type="radio" name="age" value="senior"> more than 60
      </label>
    </td>
  </tr>
</table>

<script>
  let inputs = table.getElementsByTagName('input');

  for (let input of inputs) {
    alert( input.value + ': ' + input.checked );
  }
</script>
-----------------

DOM Properties: 
Browser, ஒரு html pageஐ load பண்ணும் போது, அதை வாசித்து (parse), DOM Objectsஐ உருவாக்கும்.  அதில் இருக்கும் HTML attributes தான் 
DOM Objectsஇன் properties.  

எ.கா. 
<body id="page"> என்பதை body.id="page" என்று புரிந்து கொள்ளலாம்.  

<body id="test">
  <script>
    alert(document.body.id); // test
  </script>
</body>


DOM Functions: createElement, createTextNode, appendChild

----------
Change Table Border Using Javascript:

<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        #table_style {
            border:2px solid #CCC;
            width:100px;
            height:100px;
        }
    </style>
</head>
<body>
    <h2>Table Border Colorஐ ஜாவாஸ்கிரிப்ட் மூலம் மாற்றுவோம்</h2>
    <div id="table_style">வணக்கம்</div>
    <br>
    <button type="button" onclick="changeStyle()">Click Here</button>
    <script>
    function changeStyle(){
        var element = document.getElementById("table_style");
        element.style.borderColor = "red";
        //element.style.borderStyle = "dotted";
        //element.style.color = "#FF0000";

    }
    </script>
</body>
</html>

-------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        #table_style {
            border:2px solid #CCC;
            width:100px;
            height:100px;
        }
    </style>
</head>
<body>
    <h2>Input Valueஐ ஜாவாஸ்கிரிப்ட் மூலம் வாங்குவோம் </h2>
    <input id="username"> </input>
    <br>
    <button type="button" onclick="changeStyle()">Click Here</button>
    <script>
    function changeStyle(){
        var element = document.getElementById("username").value
        //console.log(element)
        alert(element)
    }
    </script>
</body>
</html>
------------------
HTML load ஆகும் போது ஜாவாஸ்கிரிப்ட் call ஆக வேண்டும்.
-------------------------------------------------
index2.html
-----------

<!DOCTYPE html>
<html>
	<head>
		<script type="text/javascript" src="index.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%;
height:50px;
background-color: black;
color: yellow;
}
</style>
</head>
<body>
<h2> Select By ID எடுத்துக்காட்டு</h2>
<input id="fromCity" placeHolder="Enter City Name"> <br>
<button> Submit </button>
<p id="toCity"> </p>
</body>
</html>

demo.js
-------
alert("Hi JS")
--------------

Get City Name above:
-------------------
<button onclick="getCityName()"> Submit </button>

இப்போது getCityName() என்னும் பெயரில் ஒரு function நமக்கு வேண்டும் அல்லவா>

<p> </p> க்குக் கீழ்:
<script>
	function getCityName()
	{
	cityName = document.getElementById("fromCity").value;

	}

</script>

இப்போது boxஇல் இருக்கும் மதிப்பை எடுக்க, அதற்கு அடுத்த வரியில்.

document.getElementById("toCity").innerHTML=cityName; சேர்க்க.

	function getCityName()
	{
	cityName = document.getElementById("fromCity").value;
	document.getElementById("toCity").innerHTML=cityName;
	}


இப்போது இந்த function ஐ அப்படியே வெட்டி எடுத்து index.jsஇல் வைத்துக் கொள்ளலாம். <script> </script> இரண்டையும் நீக்கி விடலாம்.

--------
DOM Property Viewer: 
Firefoxஇல் DOM Property Viewer, defaultஆக இருக்காது.  Ctrl+Shift+I கொடுத்து பின்னர் F1 கொடுங்கள்.  அதில் DOMஐத் தேர்ந்து கொள்ளுங்கள்.  

https://firefox-source-docs.mozilla.org/devtools-user/settings/index.html#tool-toolbox-settings

DOM - Select By Tag Name:
------------------------

<!DOCTYPE html>
<html>
	<head>
		<script type="text/javascript" src="index.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%;
height:50px;
background-color: black;
color: yellow;
}
</style>
</head>
<body>
<h2> Select By Tag Name எடுத்துக்காட்டு</h2>
<input placeHolder="Enter City Name"> இல் இருந்து<br>
<input placeHolder="Enter City Name"> வரை<br>
<input placeHolder="Enter City Name"> இடைத்தங்கல்<br>
<button onclick="getCityName()"> Submit </button>
<p> </p>
<p> </p>
<p> </p>
	<script>
		function getCityName()
	{
	cityNamesInput = document.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}

	</script>
</body>
</html>

மேல் உள்ளதைக் கையாளத் தான் for loop.
for(int i=0; i<cityNamesInput.length;i++)
{
cityNamesOutput[i].innerHTML =cityNamesInput[i].value
}

-------------------
Select By Tag Name By ID:
-------------------------
tag வைத்து எடுக்கும் போது எல்லா inputஉம் வர வாய்ப்பு உள்ளதே!  அதை எப்படிக் கையாள்வது?
அதற்குத் தான் div id பயன்படுத்தப் போகிறோம்.

கீழ் உள்ளதைச் செயல்படுத்தி அதில் உள்ள சிக்கலைக் கவனியுங்கள்.

<!DOCTYPE html>
<html>
	<head>
	<script type="text/javascript" src="index.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%;
height:50px;
background-color: black;
color: yellow;
}
</style>
</head>
<body>
<h2> Select By Tag Name By ID எடுத்துக்காட்டு</h2>
<input placeHolder="Enter City Name"> இல் இருந்து<br>

<div id = "cities">
<input placeHolder="Enter City Name"> இல் இருந்து<br>
<input placeHolder="Enter City Name"> வரை<br>
<input placeHolder="Enter City Name"> இடைத்தங்கல்<br>

<button onclick="getCityName()"> Submit </button>
<p> </p>
<p> </p>
<p> </p>

</div>
	<script>
		function getCityName()
	{
	cityNamesInput = document.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}

	</script>
</body>
</html>

இதைத் தவிர்க்கத் தான், div idஐ scriptக்குள் பயன்படுத்தப் போகிறோம்.

	<script>
		function getCityName()
	{
       cityDivision = document.getElementById("cities")
	cityNamesInput = cityDivision.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}

	</script>
	
	Creating HTML Tag using Javascript: 

1. ஒரு elementஐ உருவாக்கி(<p>) அதில் நம்முடைய வார்த்தைகளை அனுப்புவோம்.  

2. இதைச் செய்ய ஒரு division உருவாக்கி, append செய்வோம்.  

3. appendChild function மூலம் நாம் தட்டச்சிட்ட textஐ division tag சேமிக்கப் போகிறோம்.  

4. document.createElement("p") எனக் கொடுத்தால் paragraph element உருவாகி விடும்.  

5. document.createTextNode("Hi") எனக் கொடுத்தால் text node உருவாகி விடும்.  

6. இந்த இரண்டையும் ஒரு divisionஇல் காட்டுவோம்.  


index2.html:
-----------
<!DOCTYPE html>
<html>
	<head> 	
    <link rel="stylesheet" href="styles/layout.css"> 
    <script type="text/javascript" src="demo.js"> </script>
</head>	 
<body>
<h2> Creating HTML Element எடுத்துக்காட்டு</h2>
<div id='mydiv'>

</div> 
<input placeholder="Enter your inputs here" id="input_text"> <br>
	<button onclick= "create()"> Submit </button>
	
	</body>
</html>

layout.css
---------
*{box-sizing: border-box;}

input{
	width: 30%;
	height: 50px; 
	color: green; 
	font-size: 20px; 
	background-color: white; 
}
h2{
	color: black;
}
button
{
width: 25%;
height: 30px; 
font-size: 24px; 
background-color: lime; 
color: black; 
border-radius: 20%

}	
div
{
	width: 30%;
	height: 200px; 
	border: 1px dotted blue; 
	background-color: #f1f1f1; 
}

p
{
color: blue; 
font-size: 20px; 
font-weight: bold; 
}
	
demo.js: 
-------
function create()
{
content = document.getElementById("input_text").value; 
element = document.createElement("p") //இங்கே <p></p> வந்திருக்கும்.  
our_data = document.createTextNode(content); //இங்கே நம்முடைய text
element.appendChild(our_data); 
mydiv = document.getElementById("mydiv");
mydiv.appendChild(element); 
}
----------------

Simple Calculator Using JavaScript: 

index2.html
------------
<!DOCTYPE html>
<html>
	<head>
		<title> Simple Calculator </title>
	<link rel="stylesheet" href="styles/layout.css"> 
	</head>
	<body>
		<h2> Simple Calculator Using JavaScript </h2>
		<div class = "calc_form">
			<form name="form1">
				<input id = "calc" type="text" name="results"> 
				<br> <br>
<input type="button" value="1"   onclick="form1.results.value = form1.results.value+'1'"> 
				<input type="button" value="2" onclick="form1.results.value = form1.results.value+'2'"> 
				<input type="button" value="3"onclick="form1.results.value = form1.results.value+'3'"> 
				<input type="button" value="+"onclick="form1.results.value = form1.results.value+ '+'">
				
				<br> <br>
				<input type="button" value="4"onclick="form1.results.value = form1.results.value+'4'"> 
				<input type="button" value="5"onclick="form1.results.value = form1.results.value+'5'"> 
				<input type="button" value="6"onclick="form1.results.value = form1.results.value+'6'"> 
				<input type="button" value="-"onclick="form1.results.value = form1.results.value+'-'"> 
				
				<br> <br>
				<input type="button" value="7" onclick="form1.results.value = form1.results.value+'7'"> 
				<input type="button" value="8"onclick="form1.results.value = form1.results.value+'8'"> 
				<input type="button" value="9"onclick="form1.results.value = form1.results.value+'9'"> 
<input type="button" value="*" onclick="form1.results.value = form1.results.value+'*'"> 
				
				<br> <br>
				<input type="button" value="0"onclick="form1.results.value = form1.results.value+'0'"> 
				<input type="button" value="/"onclick="form1.results.value = form1.results.value+'/'"> 
				<input type="button" value="."onclick="form1.results.value = form1.results.value+'.'"> 
				<input type="button" value="=" onclick="form1.results.value = eval(form1.results.value)">
				
<br>
<input type="button" id="clear" value="Clear All" onclick="form1.results.value =''">
				
			</form>
			
		</div>
		
	</body>
</html>
		
---------
layout.css
---------
h2
{
	text-align: center; 
	background-color: brown;
	color: white;
}
input
{
	width: 25px; 
	background-color: #f1f1f1;
	color: black; 
	border: 1px solid brown; 
	border-radius: 8px; 
	padding: 20px; 
	margin: 5px; 
	
}
#calc
	{
	width: 180px; 
	background-color: #f1f1f1;
	color: black; 
	border: 1px solid brown; 
	border-radius: 8px; 
	padding: 20px; 
	margin: 5px; 
	}
#clear
	{
	width: 180px; 
	background-color: #f1f1f1;
	color: black; 
	border: 1px solid brown; 
	border-radius: 8px; 
	padding: 20px; 
	margin: 5px; 
	}
